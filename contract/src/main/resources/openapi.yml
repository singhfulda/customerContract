openapi: 3.0.2
info:
  title: police api
  description: "contract api"
  termsOfService: http://swagger.io/terms/
  contact:
    email: singh.fulda@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
externalDocs:
  description: save police
  url: https://microservicer.de
servers:
  - url: https://localhost:8082/v2
tags:
  - name: police
    description: Operations about police
    externalDocs:
      description: Find out more about our police
      url: https://microservicer.de
paths:
  /police:
    post:
      tags:
        - police
      summary: Create police
      description: Create police functionality
      operationId: createPolice
      requestBody:
        description: Created police object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PoliceDTO'
        required: true
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
  /police/{id}:
    get:
      tags:
        - police
      summary: Get police by id
      operationId: getPoliceById
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use police1 for testing. '
          required: true
          schema:
            type: number
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliceDTO'
        404:
          description: Police not found
          content: {}
    put:
      tags:
        - police
      summary: Updated police
      description: police.
      operationId: updatePolice
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: number
      requestBody:
        description: Updated police object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PoliceDTO'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliceDTO'
        400:
          description: Invalid police supplied
          content: {}
        404:
          description: police not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - police
      summary: Delete police
      description: This should only be done by the logged in police.
      operationId: deletePolice
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: number
      responses:
        201:
          description: operation successful
          content: {}
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: police not found
          content: {}
components:
  schemas:
    PoliceDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        faceValue:
          type: number
        customerId:
          type: integer
          format: int64